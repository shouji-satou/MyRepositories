apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: create-webapi-template-001
  title: Create CSharp Webapi Template
  description: Template for creating a Webapi application skeleton
  annotations:
    backstage.io/techdocs-ref: dir:.
  tags:
    - csharp
    - webapi
spec:
  owner: users
  type: service
  parameters:
    - title: Provide some information
      required:
        - owner
      properties:
        owner:
          title: Owner
          type: string
          ui:field: EntityPicker
          ui:options:
            catalogFilter:
              kind:
                - Group
                - User
    - title: Choose a location
      required:
        - repoUrl
      properties:
        repoUrl:
          title: Repository Location
          type: string
          ui:field: RepoUrlPicker
          ui:options:
            allowedHosts:
              - github.com
            allowedOwners:
              - shouji-satou
        pluginLocation:
          type: string
          title: Where to publish this new repository?
          ui:widget: radio
          default: Create a new repository within the specified organization
          enum:
            - Submit a pull request to the same repository
            - Create a new repository within the specified organization
      dependencies:
        pluginLocation:
          allOf:
            - if:
                properties:
                  pluginLocation:
                    const: Submit a pull request to the same repository
              then:
                properties:
                  branchName:
                    title: Branch Name
                    type: string
                    description: The name for the branch
                    default: ''
                  targetBranchName:
                    title: Target Branch Name
                    type: string
                    description: The target branch name of the merge request
                    default: ''
                # You can use additional fields of parameters within conditional parameters such as required.
                required:
                  - branchName
                  - targetBranchName

  # These steps are executed in the scaffolder backend, using data that we gathered
  # via the parameters above.
  steps:

    ### debug
    - id: log-step
      name: Debug Log
      action: debug:log
      input:
        message: |
          "repoUrl: ${{ parameters.repoUrl | parseRepoUrl }}"
          "repoName: ${{ (parameters.repoUrl | parseRepoUrl).repo }}"
          "orgName: ${{ (parameters.repoUrl | parseRepoUrl).owner }}"

    - id: crt-repo
      name: Create a new GitHub repository
      action: github:repo:create
      input:
        repoUrl: ${{ parameters.repoUrl | parseRepoUrl }}

    # Each step executes an action
    - id: template
      name: Fetch Skeleton + Template
      action: fetch:template
      input:
        url: ./skeleton
        values:
          repoUrl: ${{ parameters.repoUrl | parseRepoUrl }}
          description: ${{ parameters.description }}
          owner: ${{ parameters.owner }}
          repoName: ${{ (parameters.repoUrl | parseRepoUrl).repo }}
          orgName: ${{ (parameters.repoUrl | parseRepoUrl).owner }}

    # This step publishes the contents of the working directory to GitHub if it is a new repository.
    - id: publish
      name: Publish the webapi skeleton in a new repository
      if: ${{ parameters.pluginLocation === 'Create a new repository within the specified organization' }}
      action: publish:github
      input:
        allowedHosts: ['github.com']
        description: This is the Webapi application.
        repoUrl: ${{ parameters.repoUrl }}
        sourcePath: project

    # This step creates a pull request with the contents of the working directory.
    - id: publishGithub
      name: Create pull request with the webapi skeleton
      if: ${{ parameters.pluginLocation  === 'Submit a pull request to the same repository' }}
      action: publish:github:pull-request
      input:
        repoUrl: ${{ parameters.repoUrl }}
        branchName: ${{ parameters.branchName }}
        targetBranchName: ${{ parameters.targetBranchName }}
        title: Create webapi
        description: This pull request creates the skeleton for your backend plugin

    # This step registers the component if the contents are being published to a new repository
    #- id: register
    #  name: Registering the Catalog Info Component
    #  if: ${{ parameters.pluginLocation === 'Create a new repository within the specified organization' }}
    #  action: catalog:register
    #  input:
    #    repoContentsUrl: ${{ steps.publish.output.repoContentsUrl }}
    #    catalogInfoPath: /catalog-info.yaml

  # Outputs are displayed to the user after a successful execution of the template.
  output:
    links:
      - title: View Plugin
        url: ${{ steps.publish.output.remoteUrl }}
      - title: View Pull Request
        url: ${{ steps.publishGithub.output.remoteUrl }}
      - title: Open the Catalog Info Component
        if: ${{ parameters.pluginLocation === 'Create a new repository within the specified organization' }}
        icon: catalog
        entityRef: ${{ steps.register.output.entityRef }}